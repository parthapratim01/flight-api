memberSearchIndex = [{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchOperation","l":"ALL"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"FlightSpecification","l":"and(Specification<Flight>)","url":"and(org.springframework.data.jpa.domain.Specification)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchOperation","l":"ANY"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchOperation","l":"BEGINS_WITH"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"FlightSpecificationBuilder","l":"build()"},{"p":"com.partha.flightapi.utility","c":"HelperUtility","l":"calculateDuration(LocalDateTime, LocalDateTime)","url":"calculateDuration(java.time.LocalDateTime,java.time.LocalDateTime)"},{"p":"com.partha.flightapi.utility","c":"HelperUtility","l":"convertEntityToDTOList(List<Flight>)","url":"convertEntityToDTOList(java.util.List)"},{"p":"com.partha.flightapi.controller","c":"FlightController","l":"createFlight(FlightDTO)","url":"createFlight(com.partha.flightapi.dto.FlightDTO)"},{"p":"com.partha.flightapi.service","c":"FlightApiService","l":"createFlight(FlightDTO)","url":"createFlight(com.partha.flightapi.dto.FlightDTO)"},{"p":"com.partha.flightapi.service","c":"FlightApiServiceImpl","l":"createFlight(FlightDTO)","url":"createFlight(com.partha.flightapi.dto.FlightDTO)"},{"p":"com.partha.flightapi.utility","c":"DateUtil","l":"dateFormatter"},{"p":"com.partha.flightapi.utility","c":"DateUtil","l":"DateUtil()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.dao","c":"FLightApiDaoImpl","l":"deleteFlight(String)","url":"deleteFlight(java.lang.String)"},{"p":"com.partha.flightapi.dao","c":"FlightApiDao","l":"deleteFlight(String)","url":"deleteFlight(java.lang.String)"},{"p":"com.partha.flightapi.service","c":"FlightApiService","l":"deleteFlight(String)","url":"deleteFlight(java.lang.String)"},{"p":"com.partha.flightapi.service","c":"FlightApiServiceImpl","l":"deleteFlight(String)","url":"deleteFlight(java.lang.String)"},{"p":"com.partha.flightapi.controller","c":"FlightControllerTest","l":"deleteFlightData()"},{"p":"com.partha.flightapi.controller","c":"FlightController","l":"deleteFlightData(String)","url":"deleteFlightData(java.lang.String)"},{"p":"com.partha.flightapi.dto","c":"DomainDtoMapper","l":"DomainDtoMapper()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchOperation","l":"EQUAL"},{"p":"com.partha.flightapi.service","c":"FlightApiService","l":"fetchFlightById(String)","url":"fetchFlightById(java.lang.String)"},{"p":"com.partha.flightapi.service","c":"FlightApiServiceImpl","l":"fetchFlightById(String)","url":"fetchFlightById(java.lang.String)"},{"p":"com.partha.flightapi.controller","c":"FlightController","l":"fetchFlights(int, int, String, String)","url":"fetchFlights(int,int,java.lang.String,java.lang.String)"},{"p":"com.partha.flightapi.service","c":"FlightApiService","l":"findBySearchCriteria(FlightSpecificationBuilder, Pageable)","url":"findBySearchCriteria(com.partha.flightapi.dao.queryOptimizer.FlightSpecificationBuilder,org.springframework.data.domain.Pageable)"},{"p":"com.partha.flightapi.service","c":"FlightApiServiceImpl","l":"findBySearchCriteria(FlightSpecificationBuilder, Pageable)","url":"findBySearchCriteria(com.partha.flightapi.dao.queryOptimizer.FlightSpecificationBuilder,org.springframework.data.domain.Pageable)"},{"p":"com.partha.flightapi.dao","c":"FLightApiDaoImpl","l":"findBySearchCriteria(Specification<Flight>, Pageable)","url":"findBySearchCriteria(org.springframework.data.jpa.domain.Specification,org.springframework.data.domain.Pageable)"},{"p":"com.partha.flightapi.dao","c":"FlightApiDao","l":"findBySearchCriteria(Specification<Flight>, Pageable)","url":"findBySearchCriteria(org.springframework.data.jpa.domain.Specification,org.springframework.data.domain.Pageable)"},{"p":"com.partha.flightapi.controller","c":"FlightControllerTest","l":"findFlightById()"},{"p":"com.partha.flightapi.controller","c":"FlightController","l":"findFlightById(String)","url":"findFlightById(java.lang.String)"},{"p":"com.partha.flightapi.entity","c":"Flight","l":"Flight()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.Exception","c":"FlightAlreadyExistsException","l":"FlightAlreadyExistsException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.partha.flightapi","c":"FlightApiApplication","l":"FlightApiApplication()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.dao","c":"FLightApiDaoImpl","l":"FLightApiDaoImpl()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.service","c":"FlightApiServiceImpl","l":"FlightApiServiceImpl()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.controller","c":"FlightController","l":"FlightController()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.controller","c":"FlightControllerTest","l":"FlightControllerTest()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.controller","c":"FlightDaoTest","l":"FlightDaoTest()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.dto","c":"FlightDTO","l":"FlightDTO()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.Exception","c":"GlobalExceptionHandler","l":"flightExceptionHandler(FlightAlreadyExistsException)","url":"flightExceptionHandler(com.partha.flightapi.Exception.FlightAlreadyExistsException)"},{"p":"com.partha.flightapi.Exception","c":"GlobalExceptionHandler","l":"flightExceptionHandler(FlightNotFoundException)","url":"flightExceptionHandler(com.partha.flightapi.Exception.FlightNotFoundException)"},{"p":"com.partha.flightapi.Exception","c":"GlobalExceptionHandler","l":"flightExceptionHandler(IncorrectDataException)","url":"flightExceptionHandler(com.partha.flightapi.Exception.IncorrectDataException)"},{"p":"com.partha.flightapi.Exception","c":"FlightNotFoundException","l":"FlightNotFoundException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.partha.flightapi.controller","c":"FlightRepositoryTest","l":"FlightRepositoryTest()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"FlightSpecification","l":"FlightSpecification(SearchCriteria)","url":"%3Cinit%3E(com.partha.flightapi.dao.queryOptimizer.SearchCriteria)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"FlightSpecificationBuilder","l":"FlightSpecificationBuilder()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.dao","c":"FLightApiDaoImpl","l":"getAllFlight(Pageable)","url":"getAllFlight(org.springframework.data.domain.Pageable)"},{"p":"com.partha.flightapi.dao","c":"FlightApiDao","l":"getAllFlight(Pageable)","url":"getAllFlight(org.springframework.data.domain.Pageable)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchCriteria","l":"getDataOption()"},{"p":"com.partha.flightapi.dto","c":"SearchDTO","l":"getDataOption()"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchOperation","l":"getDataOption(String)","url":"getDataOption(java.lang.String)"},{"p":"com.partha.flightapi.utility","c":"HelperUtility","l":"getEntity(FlightDTO)","url":"getEntity(com.partha.flightapi.dto.FlightDTO)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchCriteria","l":"getFilterKey()"},{"p":"com.partha.flightapi.dao","c":"FLightApiDaoImpl","l":"getFlightById(String)","url":"getFlightById(java.lang.String)"},{"p":"com.partha.flightapi.dao","c":"FlightApiDao","l":"getFlightById(String)","url":"getFlightById(java.lang.String)"},{"p":"com.partha.flightapi.utility","c":"HelperUtility","l":"getFlightDTO(Flight)","url":"getFlightDTO(com.partha.flightapi.entity.Flight)"},{"p":"com.partha.flightapi.dto","c":"DomainDtoMapper","l":"getFlightDTOs(Page<Flight>)","url":"getFlightDTOs(org.springframework.data.domain.Page)"},{"p":"com.partha.flightapi.testUtility","c":"TestMockDataPrep","l":"getMockedCreateFlightData()"},{"p":"com.partha.flightapi.testUtility","c":"TestMockDataPrep","l":"getMockedData()"},{"p":"com.partha.flightapi.testUtility","c":"TestMockDataPrep","l":"getMockedFlightData()"},{"p":"com.partha.flightapi.testUtility","c":"TestMockDataPrep","l":"getMockedFlightDataById()"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchCriteria","l":"getOperation()"},{"p":"com.partha.flightapi.dto","c":"SearchDTO","l":"getSearchCriteriaList()"},{"p":"com.partha.flightapi.utility","c":"HelperUtility","l":"getSearchDTO(ObjectMapper, String, Class)","url":"getSearchDTO(com.fasterxml.jackson.databind.ObjectMapper,java.lang.String,java.lang.Class)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchOperation","l":"getSimpleOperation(String)","url":"getSimpleOperation(java.lang.String)"},{"p":"com.partha.flightapi.testUtility","c":"TestMockDataPrep","l":"getUpdatedFlightData()"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchCriteria","l":"getValue()"},{"p":"com.partha.flightapi.controller","c":"FlightDaoTest","l":"givenIdThenShouldReturnFlightId()"},{"p":"com.partha.flightapi.Exception","c":"GlobalExceptionHandler","l":"GlobalExceptionHandler()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.utility","c":"HelperUtility","l":"HelperUtility()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.Exception","c":"IncorrectDataException","l":"IncorrectDataException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.partha.flightapi.controller","c":"FlightControllerTest","l":"initEach()"},{"p":"com.partha.flightapi","c":"FlightApiApplication","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"com.partha.flightapi.Exception","c":"GlobalExceptionHandler","l":"MethodArgumentNotValidExceptionHandler(MethodArgumentNotValidException)","url":"MethodArgumentNotValidExceptionHandler(org.springframework.web.bind.MethodArgumentNotValidException)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"FlightSpecification","l":"or(Specification<Flight>)","url":"or(org.springframework.data.jpa.domain.Specification)"},{"p":"com.partha.flightapi.config","c":"SpringSecurityConfig","l":"passwordEncoder()"},{"p":"com.partha.flightapi.dao","c":"FLightApiDaoImpl","l":"saveFlightDetails(Flight)","url":"saveFlightDetails(com.partha.flightapi.entity.Flight)"},{"p":"com.partha.flightapi.dao","c":"FlightApiDao","l":"saveFlightDetails(Flight)","url":"saveFlightDetails(com.partha.flightapi.entity.Flight)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchCriteria","l":"SearchCriteria()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchCriteria","l":"SearchCriteria(String, String, Object)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"com.partha.flightapi.dto","c":"SearchDTO","l":"SearchDTO()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.dto","c":"SearchDTO","l":"SearchDTO(List<SearchCriteria>, String)","url":"%3Cinit%3E(java.util.List,java.lang.String)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchCriteria","l":"setDataOption(String)","url":"setDataOption(java.lang.String)"},{"p":"com.partha.flightapi.dto","c":"SearchDTO","l":"setDataOption(String)","url":"setDataOption(java.lang.String)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchCriteria","l":"setFilterKey(String)","url":"setFilterKey(java.lang.String)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchCriteria","l":"setOperation(String)","url":"setOperation(java.lang.String)"},{"p":"com.partha.flightapi.dto","c":"SearchDTO","l":"setSearchCriteriaList(List<SearchCriteria>)","url":"setSearchCriteriaList(java.util.List)"},{"p":"com.partha.flightapi.controller","c":"FlightDaoTest","l":"setUp()"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchCriteria","l":"setValue(Object)","url":"setValue(java.lang.Object)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchOperation","l":"SIMPLE_OPERATION_SET"},{"p":"com.partha.flightapi.config","c":"SpringSecurityConfig","l":"SpringSecurityConfig()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.utility","c":"HelperUtility","l":"stringToDouble(String)","url":"stringToDouble(java.lang.String)"},{"p":"com.partha.flightapi.controller","c":"FlightControllerTest","l":"testCreateFlight()"},{"p":"com.partha.flightapi.controller","c":"FlightControllerTest","l":"testFetchFlights()"},{"p":"com.partha.flightapi.testUtility","c":"TestMockDataPrep","l":"TestMockDataPrep()","url":"%3Cinit%3E()"},{"p":"com.partha.flightapi.utility","c":"DateUtil","l":"toLocalDateTime(String)","url":"toLocalDateTime(java.lang.String)"},{"p":"com.partha.flightapi.utility","c":"DateUtil","l":"toLocalTime(String)","url":"toLocalTime(java.lang.String)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"FlightSpecification","l":"toPredicate(Root<Flight>, CriteriaQuery<?>, CriteriaBuilder)","url":"toPredicate(javax.persistence.criteria.Root,javax.persistence.criteria.CriteriaQuery,javax.persistence.criteria.CriteriaBuilder)"},{"p":"com.partha.flightapi.dao","c":"FLightApiDaoImpl","l":"updateFLight(Flight)","url":"updateFLight(com.partha.flightapi.entity.Flight)"},{"p":"com.partha.flightapi.dao","c":"FlightApiDao","l":"updateFLight(Flight)","url":"updateFLight(com.partha.flightapi.entity.Flight)"},{"p":"com.partha.flightapi.service","c":"FlightApiService","l":"updateFlight(FlightDTO)","url":"updateFlight(com.partha.flightapi.dto.FlightDTO)"},{"p":"com.partha.flightapi.service","c":"FlightApiServiceImpl","l":"updateFlight(FlightDTO)","url":"updateFlight(com.partha.flightapi.dto.FlightDTO)"},{"p":"com.partha.flightapi.controller","c":"FlightControllerTest","l":"updateFlightData()"},{"p":"com.partha.flightapi.controller","c":"FlightController","l":"updateFLightData(FlightDTO)","url":"updateFLightData(com.partha.flightapi.dto.FlightDTO)"},{"p":"com.partha.flightapi.config","c":"SpringSecurityConfig","l":"userDetailsService()"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchOperation","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"SearchOperation","l":"values()"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"FlightSpecificationBuilder","l":"with(SearchCriteria)","url":"with(com.partha.flightapi.dao.queryOptimizer.SearchCriteria)"},{"p":"com.partha.flightapi.dao.queryOptimizer","c":"FlightSpecificationBuilder","l":"with(String, String, Object)","url":"with(java.lang.String,java.lang.String,java.lang.Object)"}]